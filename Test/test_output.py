import unittest
from Handler.Output import Output


class TestOutput(unittest.TestCase):

    def test_win(self):
        output = Output()
        self.assertEqual(output.win(1), '–ø–æ–±–µ–¥–∏–ª –∏–≥—Ä–æ–∫ 1')
        self.assertEqual(output.win(2), '–ø–æ–±–µ–¥–∏–ª –∏–≥—Ä–æ–∫ 2')

    def test_draw(self):
        output = Output()
        self.assertEqual(output.draw(), '–Ω–∏—á—å—è!')

    def test_error(self):
        output = Output()
        self.assertEqual(output.error(), '–æ—à–∏–±–∫–∞ –≤–≤–æ–¥–∞')

    def test_instructions(self):
        output = Output()
        self.assertEqual(output.instructions(), '–≤–≤–µ–¥–∏—Ç–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã\n(–±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤ —Ü–∏—Ñ—Ä–∞, –±—É–∫–≤–∞)\n–Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –í–í–û–î')

    def test_fields(self):
        output = Output()
        field_pattern = [
            ['*', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J'],
            ['1', '1', '1', '1', '1', '0', '0', '0', '0', '0', '0'],
            ['2', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
            ['3', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
            ['4', '3', '3', '3', '3', '3', '3', '0', '0', '0', '0'],
            ['5', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
            ['6', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
            ['7', '0', '0', '0', '0', '0', '2', '2', '2', '2', '0'],
            ['8', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
            ['9', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
            ['10', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0']
        ]
        field_attack = [
            ['*', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J'],
            ['1', '?', '+', '+', '+', '+', '+', '+', '+', '+', '+'],
            ['2', '?', '+', '+', '+', '+', '+', '+', '+', '+', '+'],
            ['3', '?', '+', '+', '+', '+', '+', '+', '+', '+', '+'],
            ['4', '?', '+', '+', '+', '+', '+', '+', '+', '+', '+'],
            ['5', '?', '+', '+', '+', '+', '+', '+', '+', '+', '+'],
            ['6', '?', '+', '+', '+', '+', '+', '+', '+', '+', '+'],
            ['7', '?', '+', '+', '+', '+', '+', '+', '+', '+', '+'],
            ['8', '?', '+', '+', '+', '+', '+', '+', '+', '+', '+'],
            ['9', '?', '+', '+', '+', '+', '+', '+', '+', '+', '+'],
            ['10', '?', '+', '+', '+', '+', '+', '+', '+', '+', '+']
        ]
        field_size = 10
        turn = 1
        expected_result = '''—Ö–æ–¥ –∏–≥—Ä–æ–∫–∞ –Ω–æ–º–µ—Ä 1
             –∏–≥—Ä–æ–∫ 1                                        –∏–≥—Ä–æ–∫ 2
        A  B  C  D  E  F  G  H   I   J            A  B  C  D  E  F  G  H   I   J  
   1  üö¢ üö¢ üö¢ üö¢ ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è      1  ‚ùî + + + + + + + + + 
   2  ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è      2  ‚ùî + + + + + + + + + 
   3  ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è      3  ‚ùî + + + + + + + + + 
   4  üö¢ üö¢ üö¢ üö¢ üö¢ üö¢ ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è      4  ‚ùî + + + + + + + + + 
   5  ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è      5  ‚ùî + + + + + + + + + 
   6  ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è      6  ‚ùî + + + + + + + + + 
   7  ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è üóØ üóØ üóØ üóØ ‚óºÔ∏è      7  ‚ùî + + + + + + + + + 
   8  ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è      8  ‚ùî + + + + + + + + + 
   9  ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è      9  ‚ùî + + + + + + + + + 
 10  ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è    10  ‚ùî + + + + + + + + + 
'''
        self.assertEqual(output.fields(field_pattern, field_attack, field_size, turn), expected_result)

    def test_field(self):
        output = Output()
        field = [
            ['*', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J'],
            ['1', '1', '1', '1', '1', '0', '0', '0', '0', '0', '0'],
            ['2', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
            ['3', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
            ['4', '3', '3', '3', '3', '3', '3', '0', '0', '0', '0'],
            ['5', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
            ['6', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
            ['7', '0', '0', '0', '0', '0', '2', '2', '2', '2', '0'],
            ['8', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
            ['9', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0'],
            ['10', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0']
        ]
        n = 10
        num = 1
        expected_result = '''p–∞—Å—Å—Ç–∞–Ω–æ–≤–∫–∞ 1 –∏–≥—Ä–æ–∫–∞
       A  B  C  D  E  F  G  H   I   J  
  1  üö¢ üö¢ üö¢ üö¢ ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è 
  2  ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è 
  3  ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è 
  4  üö¢ üö¢ üö¢ üö¢ üö¢ üö¢ ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è 
  5  ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è 
  6  ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è 
  7  ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è üóØ üóØ üóØ üóØ ‚óºÔ∏è 
  8  ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è 
  9  ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è 
10  ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è ‚óºÔ∏è 
'''
        self.assertEqual(output.field(field, n, num), expected_result)
